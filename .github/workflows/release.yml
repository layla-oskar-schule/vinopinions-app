name: Release
on:
  push:
    branches: ['developer', 'master']

permissions:
  contents: read # for checkout

env:
  SEMANTIC_RELEASE_VERSION: 23

jobs:
  codeql:
    uses: ./.github/workflows/codeql.yml
    permissions:
      actions: read
      security-events: write
      contents: read

  eslint:
    uses: ./.github/workflows/eslint.yml
    permissions:
      security-events: write
      contents: read

  release:
    name: Release Github
    runs-on: ubuntu-latest

    needs:
      - codeql
      - eslint

    outputs:
      version: ${{ steps.check_version.outputs.RELEASE_VERSION }}
      releaseCommitSha: ${{ steps.get_release_commit_sha.outputs.RELEASE_COMMIT_SHA }}

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ vars.RELEASE_BOT_ID }}
          private_key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Install dev dependencies
        run: yarn install --dev --ignore-scripts --non-interactive --frozen-lockfile

      - name: Check version
        id: check_version
        run: echo "RELEASE_VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | awk '{print $NF}')" >> $GITHUB_OUTPUT

      - name: Release version
        env:
          BRANCH_NAME: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: npx semantic-release

      # store the commit hash of the release commit for later workflows to verify the correct version
      - name: Get Release Commit Sha
        id: get_release_commit_sha
        run: echo "RELEASE_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
